"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/components/ChessBoard.js":
/*!**************************************!*\
  !*** ./src/components/ChessBoard.js ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @swc/helpers/_/_tagged_template_literal */ \"./node_modules/@swc/helpers/esm/_tagged_template_literal.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @apollo/client */ \"./node_modules/@apollo/client/index.js\");\n\nfunction _templateObject() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n  mutation MakeMove($gameId: ID!, $fromRow: Int!, $fromCol: Int!, $toRow: Int!, $toCol: Int!) {\\n    makeMove(gameId: $gameId, fromRow: $fromRow, fromCol: $fromCol, toRow: $toRow, toCol: $toCol) {\\n      fromRow\\n      fromCol\\n      toRow\\n      toCol\\n      pieceType\\n      pieceColor\\n      moveNumber\\n    }\\n  }\\n\"\n    ]);\n    _templateObject = function() {\n        return data;\n    };\n    return data;\n}\n\nvar _s = $RefreshSig$();\n\n\nconst MAKE_MOVE = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_3__.gql)(_templateObject());\nconst ChessBoard = (param)=>{\n    let { game, gameId, onMoveComplete } = param;\n    _s();\n    const [selectedSquare, setSelectedSquare] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [validMoves, setValidMoves] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)([]);\n    const [moveError, setMoveError] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [makeMove, { loading: moveLoading }] = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_3__.useMutation)(MAKE_MOVE);\n    const handleSquareClick = async (row, col)=>{\n        console.log(\"Square clicked:\", row, col);\n        // Clear any previous errors\n        setMoveError(null);\n        if (!selectedSquare) {\n            const piece = getPieceAt(row, col);\n            console.log(\"Piece at clicked square:\", piece);\n            if (piece && piece.color === (game === null || game === void 0 ? void 0 : game.currentPlayer)) {\n                console.log(\"Selecting piece:\", piece);\n                setSelectedSquare({\n                    row,\n                    col\n                });\n                await getValidMovesForPiece(row, col);\n            }\n        } else {\n            console.log(\"Making move from\", selectedSquare, \"to\", {\n                row,\n                col\n            });\n            try {\n                const result = await makeMove({\n                    variables: {\n                        gameId,\n                        fromRow: selectedSquare.row,\n                        fromCol: selectedSquare.col,\n                        toRow: row,\n                        toCol: col\n                    }\n                });\n                console.log(\"Move result:\", result);\n                setSelectedSquare(null);\n                setValidMoves([]);\n                onMoveComplete();\n            } catch (error) {\n                console.error(\"Move error:\", error);\n                setMoveError(\"Invalid move\");\n                setSelectedSquare(null);\n                setValidMoves([]);\n            }\n        }\n    };\n    const getValidMovesForPiece = async (row, col)=>{\n        const piece = getPieceAt(row, col);\n        if (!piece) return;\n        const moves = [];\n        // Test each square on the board to see if it's a valid move\n        for(let r = 0; r < 8; r++){\n            for(let c = 0; c < 8; c++){\n                if (r === row && c === col) continue;\n                // First check basic movement pattern\n                if (isValidMovePattern(piece, row, col, r, c)) {\n                    // Then check if this move would be legal (doesn't put own king in check)\n                    if (isLegalMove(row, col, r, c)) {\n                        moves.push({\n                            row: r,\n                            col: c\n                        });\n                    }\n                }\n            }\n        }\n        setValidMoves(moves);\n    };\n    // Check if a move is legal (doesn't put own king in check)\n    const isLegalMove = (fromRow, fromCol, toRow, toCol)=>{\n        // Simulate the move\n        const simulatedGame = simulateMove(fromRow, fromCol, toRow, toCol);\n        if (!simulatedGame) return false;\n        // Check if this move would put own king in check\n        const piece = getPieceAt(fromRow, fromCol);\n        if (!piece) return false;\n        const wouldBeInCheck = isKingInCheck(simulatedGame, piece.color);\n        console.log(\"Testing move \".concat(fromRow, \",\").concat(fromCol, \" to \").concat(toRow, \",\").concat(toCol, \": would be in check = \").concat(wouldBeInCheck));\n        return !wouldBeInCheck;\n    };\n    // Simulate a move and return the resulting game state\n    const simulateMove = (fromRow, fromCol, toRow, toCol)=>{\n        if (!(game === null || game === void 0 ? void 0 : game.pieces)) return null;\n        // Create a copy of the pieces array\n        const newPieces = game.pieces.map((piece)=>({\n                ...piece\n            }));\n        // Find the piece to move\n        const pieceIndex = newPieces.findIndex((p)=>p.row === fromRow && p.col === fromCol);\n        if (pieceIndex === -1) return null;\n        // Remove any piece at destination (capture)\n        const capturedIndex = newPieces.findIndex((p)=>p.row === toRow && p.col === toCol);\n        if (capturedIndex !== -1) {\n            newPieces.splice(capturedIndex, 1);\n        }\n        // Move the piece\n        newPieces[pieceIndex] = {\n            ...newPieces[pieceIndex],\n            row: toRow,\n            col: toCol\n        };\n        return {\n            pieces: newPieces\n        };\n    };\n    // Check if a king is in check in a given game state\n    const isKingInCheck = (gameState, kingColor)=>{\n        if (!(gameState === null || gameState === void 0 ? void 0 : gameState.pieces)) return false;\n        // Find the king\n        const king = gameState.pieces.find((p)=>p.type === \"KING\" && p.color === kingColor);\n        if (!king) return false;\n        // Check if any opponent piece can attack the king\n        const opponentColor = kingColor === \"WHITE\" ? \"BLACK\" : \"WHITE\";\n        const opponentPieces = gameState.pieces.filter((p)=>p.color === opponentColor);\n        for (let piece of opponentPieces){\n            if (canPieceAttackSquare(gameState, piece, king.row, king.col)) {\n                console.log(\"\".concat(piece.type, \" at \").concat(piece.row, \",\").concat(piece.col, \" attacks \").concat(kingColor, \" king at \").concat(king.row, \",\").concat(king.col));\n                return true;\n            }\n        }\n        return false;\n    };\n    // Check if a piece can attack a specific square\n    const canPieceAttackSquare = (gameState, piece, targetRow, targetCol)=>{\n        const rowDiff = Math.abs(targetRow - piece.row);\n        const colDiff = Math.abs(targetCol - piece.col);\n        // For check detection, we only care about squares a piece can attack, not move to\n        switch(piece.type){\n            case \"PAWN\":\n                const direction = piece.color === \"WHITE\" ? -1 : 1;\n                const rowDiffSigned = targetRow - piece.row;\n                // Pawns only attack diagonally for check purposes\n                return colDiff === 1 && rowDiffSigned === direction;\n            case \"ROOK\":\n                return (rowDiff === 0 || colDiff === 0) && isPathClearInGame(gameState, piece.row, piece.col, targetRow, targetCol);\n            case \"BISHOP\":\n                return rowDiff === colDiff && isPathClearInGame(gameState, piece.row, piece.col, targetRow, targetCol);\n            case \"QUEEN\":\n                return (rowDiff === 0 || colDiff === 0 || rowDiff === colDiff) && isPathClearInGame(gameState, piece.row, piece.col, targetRow, targetCol);\n            case \"KING\":\n                return rowDiff <= 1 && colDiff <= 1;\n            case \"KNIGHT\":\n                return rowDiff === 2 && colDiff === 1 || rowDiff === 1 && colDiff === 2;\n            default:\n                return false;\n        }\n    };\n    // Check if path is clear in a given game state\n    const isPathClearInGame = (gameState, fromRow, fromCol, toRow, toCol)=>{\n        const rowStep = Math.sign(toRow - fromRow);\n        const colStep = Math.sign(toCol - fromCol);\n        let currentRow = fromRow + rowStep;\n        let currentCol = fromCol + colStep;\n        while(currentRow !== toRow || currentCol !== toCol){\n            if (gameState.pieces.find((p)=>p.row === currentRow && p.col === currentCol)) {\n                return false;\n            }\n            currentRow += rowStep;\n            currentCol += colStep;\n        }\n        return true;\n    };\n    const isValidMovePattern = (piece, fromRow, fromCol, toRow, toCol)=>{\n        const rowDiff = Math.abs(toRow - fromRow);\n        const colDiff = Math.abs(toCol - fromCol);\n        const targetPiece = getPieceAt(toRow, toCol);\n        // Can't capture your own pieces\n        if (targetPiece && targetPiece.color === piece.color) {\n            return false;\n        }\n        // Basic movement patterns\n        switch(piece.type){\n            case \"PAWN\":\n                const direction = piece.color === \"WHITE\" ? -1 : 1;\n                const rowDiffSigned = toRow - fromRow;\n                if (colDiff === 0) {\n                    // Forward moves - can't capture\n                    if (targetPiece) return false;\n                    if (rowDiffSigned === direction) return true;\n                    if (piece.hasMoved === false && rowDiffSigned === 2 * direction && !getPieceAt(fromRow + direction, fromCol)) {\n                        return true;\n                    }\n                } else if (colDiff === 1 && rowDiffSigned === direction) {\n                    // Diagonal moves - must capture\n                    return targetPiece !== null;\n                }\n                return false;\n            case \"ROOK\":\n                return (rowDiff === 0 || colDiff === 0) && isPathClearSimple(fromRow, fromCol, toRow, toCol);\n            case \"BISHOP\":\n                return rowDiff === colDiff && isPathClearSimple(fromRow, fromCol, toRow, toCol);\n            case \"QUEEN\":\n                return (rowDiff === 0 || colDiff === 0 || rowDiff === colDiff) && isPathClearSimple(fromRow, fromCol, toRow, toCol);\n            case \"KING\":\n                return rowDiff <= 1 && colDiff <= 1;\n            case \"KNIGHT\":\n                return rowDiff === 2 && colDiff === 1 || rowDiff === 1 && colDiff === 2;\n            default:\n                return false;\n        }\n    };\n    const isPathClearSimple = (fromRow, fromCol, toRow, toCol)=>{\n        const rowStep = Math.sign(toRow - fromRow);\n        const colStep = Math.sign(toCol - fromCol);\n        let currentRow = fromRow + rowStep;\n        let currentCol = fromCol + colStep;\n        while(currentRow !== toRow || currentCol !== toCol){\n            if (getPieceAt(currentRow, currentCol)) {\n                return false;\n            }\n            currentRow += rowStep;\n            currentCol += colStep;\n        }\n        return true;\n    };\n    const getPieceAt = (row, col)=>{\n        var _game_pieces;\n        return game === null || game === void 0 ? void 0 : (_game_pieces = game.pieces) === null || _game_pieces === void 0 ? void 0 : _game_pieces.find((piece)=>piece.row === row && piece.col === col);\n    };\n    const getPieceSymbol = (piece)=>{\n        var _pieceSymbols_piece_color;\n        if (!piece) return \"\";\n        const pieceSymbols = {\n            \"WHITE\": {\n                \"KING\": \"♔\",\n                \"QUEEN\": \"♕\",\n                \"ROOK\": \"♖\",\n                \"BISHOP\": \"♗\",\n                \"KNIGHT\": \"♘\",\n                \"PAWN\": \"♙\"\n            },\n            \"BLACK\": {\n                \"KING\": \"♚\",\n                \"QUEEN\": \"♛\",\n                \"ROOK\": \"♜\",\n                \"BISHOP\": \"♝\",\n                \"KNIGHT\": \"♞\",\n                \"PAWN\": \"♟\"\n            }\n        };\n        return ((_pieceSymbols_piece_color = pieceSymbols[piece.color]) === null || _pieceSymbols_piece_color === void 0 ? void 0 : _pieceSymbols_piece_color[piece.type]) || piece.type[0];\n    };\n    const isValidMoveSquare = (row, col)=>{\n        return validMoves.some((move)=>move.row === row && move.col === col);\n    };\n    if (!game) return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n        children: \"Loading...\"\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\Harry Miller\\\\chess-game\\\\frontend\\\\src\\\\components\\\\ChessBoard.js\",\n        lineNumber: 308,\n        columnNumber: 21\n    }, undefined);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n        children: [\n            moveError && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                style: {\n                    color: \"red\",\n                    marginBottom: \"10px\"\n                },\n                children: moveError\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Harry Miller\\\\chess-game\\\\frontend\\\\src\\\\components\\\\ChessBoard.js\",\n                lineNumber: 313,\n                columnNumber: 9\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                className: \"chess-board\",\n                children: Array.from({\n                    length: 8\n                }, (_, row)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                        className: \"chess-row\",\n                        children: Array.from({\n                            length: 8\n                        }, (_, col)=>{\n                            const piece = getPieceAt(row, col);\n                            const isSelected = selectedSquare && selectedSquare.row === row && selectedSquare.col === col;\n                            const isValidMove = isValidMoveSquare(row, col);\n                            const isLight = (row + col) % 2 === 0;\n                            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                                className: \"chess-square \".concat(isLight ? \"light\" : \"dark\", \" \").concat(isSelected ? \"selected\" : \"\"),\n                                onClick: ()=>handleSquareClick(row, col),\n                                children: [\n                                    isValidMove && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                                        className: \"valid-move-overlay\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\Harry Miller\\\\chess-game\\\\frontend\\\\src\\\\components\\\\ChessBoard.js\",\n                                        lineNumber: 333,\n                                        columnNumber: 35\n                                    }, undefined),\n                                    piece && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"span\", {\n                                        className: \"piece\",\n                                        children: getPieceSymbol(piece)\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\Harry Miller\\\\chess-game\\\\frontend\\\\src\\\\components\\\\ChessBoard.js\",\n                                        lineNumber: 335,\n                                        columnNumber: 21\n                                    }, undefined)\n                                ]\n                            }, col, true, {\n                                fileName: \"C:\\\\Users\\\\Harry Miller\\\\chess-game\\\\frontend\\\\src\\\\components\\\\ChessBoard.js\",\n                                lineNumber: 328,\n                                columnNumber: 17\n                            }, undefined);\n                        })\n                    }, row, false, {\n                        fileName: \"C:\\\\Users\\\\Harry Miller\\\\chess-game\\\\frontend\\\\src\\\\components\\\\ChessBoard.js\",\n                        lineNumber: 320,\n                        columnNumber: 11\n                    }, undefined))\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Harry Miller\\\\chess-game\\\\frontend\\\\src\\\\components\\\\ChessBoard.js\",\n                lineNumber: 318,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\Harry Miller\\\\chess-game\\\\frontend\\\\src\\\\components\\\\ChessBoard.js\",\n        lineNumber: 311,\n        columnNumber: 5\n    }, undefined);\n};\n_s(ChessBoard, \"KDAaof9zxJLq3TdkMNevsbnpBwk=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_3__.useMutation\n    ];\n});\n_c = ChessBoard;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ChessBoard);\nvar _c;\n$RefreshReg$(_c, \"ChessBoard\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFVOzs7Ozs7b0NBQzlCaEUsdUJBQ0MsOERBQUN5RTt3Q0FBS1QsV0FBVTtrREFDYlIsZUFBZXhEOzs7Ozs7OytCQVBmSDs7Ozs7d0JBWVg7dUJBckJRRDs7Ozs7Ozs7Ozs7Ozs7OztBQTJCcEI7R0F6VU1kOztRQUl5Q0gsdURBQVdBOzs7S0FKcERHO0FBMlVOLCtEQUFlQSxVQUFVQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb21wb25lbnRzL0NoZXNzQm9hcmQuanM/ZDgzYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlTXV0YXRpb24sIGdxbCB9IGZyb20gJ0BhcG9sbG8vY2xpZW50JztcblxuY29uc3QgTUFLRV9NT1ZFID0gZ3FsYFxuICBtdXRhdGlvbiBNYWtlTW92ZSgkZ2FtZUlkOiBJRCEsICRmcm9tUm93OiBJbnQhLCAkZnJvbUNvbDogSW50ISwgJHRvUm93OiBJbnQhLCAkdG9Db2w6IEludCEpIHtcbiAgICBtYWtlTW92ZShnYW1lSWQ6ICRnYW1lSWQsIGZyb21Sb3c6ICRmcm9tUm93LCBmcm9tQ29sOiAkZnJvbUNvbCwgdG9Sb3c6ICR0b1JvdywgdG9Db2w6ICR0b0NvbCkge1xuICAgICAgZnJvbVJvd1xuICAgICAgZnJvbUNvbFxuICAgICAgdG9Sb3dcbiAgICAgIHRvQ29sXG4gICAgICBwaWVjZVR5cGVcbiAgICAgIHBpZWNlQ29sb3JcbiAgICAgIG1vdmVOdW1iZXJcbiAgICB9XG4gIH1cbmA7XG5cbmNvbnN0IENoZXNzQm9hcmQgPSAoeyBnYW1lLCBnYW1lSWQsIG9uTW92ZUNvbXBsZXRlIH0pID0+IHtcbiAgY29uc3QgW3NlbGVjdGVkU3F1YXJlLCBzZXRTZWxlY3RlZFNxdWFyZV0gPSB1c2VTdGF0ZShudWxsKTtcbiAgY29uc3QgW3ZhbGlkTW92ZXMsIHNldFZhbGlkTW92ZXNdID0gdXNlU3RhdGUoW10pO1xuICBjb25zdCBbbW92ZUVycm9yLCBzZXRNb3ZlRXJyb3JdID0gdXNlU3RhdGUobnVsbCk7XG4gIGNvbnN0IFttYWtlTW92ZSwgeyBsb2FkaW5nOiBtb3ZlTG9hZGluZyB9XSA9IHVzZU11dGF0aW9uKE1BS0VfTU9WRSk7XG5cbiAgY29uc3QgaGFuZGxlU3F1YXJlQ2xpY2sgPSBhc3luYyAocm93LCBjb2wpID0+IHtcbiAgICBjb25zb2xlLmxvZygnU3F1YXJlIGNsaWNrZWQ6Jywgcm93LCBjb2wpO1xuICAgIFxuICAgIC8vIENsZWFyIGFueSBwcmV2aW91cyBlcnJvcnNcbiAgICBzZXRNb3ZlRXJyb3IobnVsbCk7XG4gICAgXG4gICAgaWYgKCFzZWxlY3RlZFNxdWFyZSkge1xuICAgICAgY29uc3QgcGllY2UgPSBnZXRQaWVjZUF0KHJvdywgY29sKTtcbiAgICAgIGNvbnNvbGUubG9nKCdQaWVjZSBhdCBjbGlja2VkIHNxdWFyZTonLCBwaWVjZSk7XG4gICAgICBpZiAocGllY2UgJiYgcGllY2UuY29sb3IgPT09IGdhbWU/LmN1cnJlbnRQbGF5ZXIpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ1NlbGVjdGluZyBwaWVjZTonLCBwaWVjZSk7XG4gICAgICAgIHNldFNlbGVjdGVkU3F1YXJlKHsgcm93LCBjb2wgfSk7XG4gICAgICAgIGF3YWl0IGdldFZhbGlkTW92ZXNGb3JQaWVjZShyb3csIGNvbCk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnNvbGUubG9nKCdNYWtpbmcgbW92ZSBmcm9tJywgc2VsZWN0ZWRTcXVhcmUsICd0bycsIHsgcm93LCBjb2wgfSk7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBtYWtlTW92ZSh7XG4gICAgICAgICAgdmFyaWFibGVzOiB7XG4gICAgICAgICAgICBnYW1lSWQsXG4gICAgICAgICAgICBmcm9tUm93OiBzZWxlY3RlZFNxdWFyZS5yb3csXG4gICAgICAgICAgICBmcm9tQ29sOiBzZWxlY3RlZFNxdWFyZS5jb2wsXG4gICAgICAgICAgICB0b1Jvdzogcm93LFxuICAgICAgICAgICAgdG9Db2w6IGNvbCxcbiAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgICAgY29uc29sZS5sb2coJ01vdmUgcmVzdWx0OicsIHJlc3VsdCk7XG4gICAgICAgIHNldFNlbGVjdGVkU3F1YXJlKG51bGwpO1xuICAgICAgICBzZXRWYWxpZE1vdmVzKFtdKTtcbiAgICAgICAgb25Nb3ZlQ29tcGxldGUoKTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ01vdmUgZXJyb3I6JywgZXJyb3IpO1xuICAgICAgICBzZXRNb3ZlRXJyb3IoJ0ludmFsaWQgbW92ZScpO1xuICAgICAgICBzZXRTZWxlY3RlZFNxdWFyZShudWxsKTtcbiAgICAgICAgc2V0VmFsaWRNb3ZlcyhbXSk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGdldFZhbGlkTW92ZXNGb3JQaWVjZSA9IGFzeW5jIChyb3csIGNvbCkgPT4ge1xuICAgIGNvbnN0IHBpZWNlID0gZ2V0UGllY2VBdChyb3csIGNvbCk7XG4gICAgaWYgKCFwaWVjZSkgcmV0dXJuO1xuXG4gICAgY29uc3QgbW92ZXMgPSBbXTtcbiAgICBcbiAgICAvLyBUZXN0IGVhY2ggc3F1YXJlIG9uIHRoZSBib2FyZCB0byBzZWUgaWYgaXQncyBhIHZhbGlkIG1vdmVcbiAgICBmb3IgKGxldCByID0gMDsgciA8IDg7IHIrKykge1xuICAgICAgZm9yIChsZXQgYyA9IDA7IGMgPCA4OyBjKyspIHtcbiAgICAgICAgaWYgKHIgPT09IHJvdyAmJiBjID09PSBjb2wpIGNvbnRpbnVlO1xuICAgICAgICBcbiAgICAgICAgLy8gRmlyc3QgY2hlY2sgYmFzaWMgbW92ZW1lbnQgcGF0dGVyblxuICAgICAgICBpZiAoaXNWYWxpZE1vdmVQYXR0ZXJuKHBpZWNlLCByb3csIGNvbCwgciwgYykpIHtcbiAgICAgICAgICAvLyBUaGVuIGNoZWNrIGlmIHRoaXMgbW92ZSB3b3VsZCBiZSBsZWdhbCAoZG9lc24ndCBwdXQgb3duIGtpbmcgaW4gY2hlY2spXG4gICAgICAgICAgaWYgKGlzTGVnYWxNb3ZlKHJvdywgY29sLCByLCBjKSkge1xuICAgICAgICAgICAgbW92ZXMucHVzaCh7IHJvdzogciwgY29sOiBjIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICBzZXRWYWxpZE1vdmVzKG1vdmVzKTtcbiAgfTtcblxuICAvLyBDaGVjayBpZiBhIG1vdmUgaXMgbGVnYWwgKGRvZXNuJ3QgcHV0IG93biBraW5nIGluIGNoZWNrKVxuICBjb25zdCBpc0xlZ2FsTW92ZSA9IChmcm9tUm93LCBmcm9tQ29sLCB0b1JvdywgdG9Db2wpID0+IHtcbiAgICAvLyBTaW11bGF0ZSB0aGUgbW92ZVxuICAgIGNvbnN0IHNpbXVsYXRlZEdhbWUgPSBzaW11bGF0ZU1vdmUoZnJvbVJvdywgZnJvbUNvbCwgdG9Sb3csIHRvQ29sKTtcbiAgICBpZiAoIXNpbXVsYXRlZEdhbWUpIHJldHVybiBmYWxzZTtcbiAgICBcbiAgICAvLyBDaGVjayBpZiB0aGlzIG1vdmUgd291bGQgcHV0IG93biBraW5nIGluIGNoZWNrXG4gICAgY29uc3QgcGllY2UgPSBnZXRQaWVjZUF0KGZyb21Sb3csIGZyb21Db2wpO1xuICAgIGlmICghcGllY2UpIHJldHVybiBmYWxzZTtcbiAgICBcbiAgICBjb25zdCB3b3VsZEJlSW5DaGVjayA9IGlzS2luZ0luQ2hlY2soc2ltdWxhdGVkR2FtZSwgcGllY2UuY29sb3IpO1xuICAgIGNvbnNvbGUubG9nKGBUZXN0aW5nIG1vdmUgJHtmcm9tUm93fSwke2Zyb21Db2x9IHRvICR7dG9Sb3d9LCR7dG9Db2x9OiB3b3VsZCBiZSBpbiBjaGVjayA9ICR7d291bGRCZUluQ2hlY2t9YCk7XG4gICAgXG4gICAgcmV0dXJuICF3b3VsZEJlSW5DaGVjaztcbiAgfTtcblxuICAvLyBTaW11bGF0ZSBhIG1vdmUgYW5kIHJldHVybiB0aGUgcmVzdWx0aW5nIGdhbWUgc3RhdGVcbiAgY29uc3Qgc2ltdWxhdGVNb3ZlID0gKGZyb21Sb3csIGZyb21Db2wsIHRvUm93LCB0b0NvbCkgPT4ge1xuICAgIGlmICghZ2FtZT8ucGllY2VzKSByZXR1cm4gbnVsbDtcbiAgICBcbiAgICAvLyBDcmVhdGUgYSBjb3B5IG9mIHRoZSBwaWVjZXMgYXJyYXlcbiAgICBjb25zdCBuZXdQaWVjZXMgPSBnYW1lLnBpZWNlcy5tYXAocGllY2UgPT4gKHtcbiAgICAgIC4uLnBpZWNlXG4gICAgfSkpO1xuICAgIFxuICAgIC8vIEZpbmQgdGhlIHBpZWNlIHRvIG1vdmVcbiAgICBjb25zdCBwaWVjZUluZGV4ID0gbmV3UGllY2VzLmZpbmRJbmRleChwID0+IHAucm93ID09PSBmcm9tUm93ICYmIHAuY29sID09PSBmcm9tQ29sKTtcbiAgICBpZiAocGllY2VJbmRleCA9PT0gLTEpIHJldHVybiBudWxsO1xuICAgIFxuICAgIC8vIFJlbW92ZSBhbnkgcGllY2UgYXQgZGVzdGluYXRpb24gKGNhcHR1cmUpXG4gICAgY29uc3QgY2FwdHVyZWRJbmRleCA9IG5ld1BpZWNlcy5maW5kSW5kZXgocCA9PiBwLnJvdyA9PT0gdG9Sb3cgJiYgcC5jb2wgPT09IHRvQ29sKTtcbiAgICBpZiAoY2FwdHVyZWRJbmRleCAhPT0gLTEpIHtcbiAgICAgIG5ld1BpZWNlcy5zcGxpY2UoY2FwdHVyZWRJbmRleCwgMSk7XG4gICAgfVxuICAgIFxuICAgIC8vIE1vdmUgdGhlIHBpZWNlXG4gICAgbmV3UGllY2VzW3BpZWNlSW5kZXhdID0ge1xuICAgICAgLi4ubmV3UGllY2VzW3BpZWNlSW5kZXhdLFxuICAgICAgcm93OiB0b1JvdyxcbiAgICAgIGNvbDogdG9Db2xcbiAgICB9O1xuICAgIFxuICAgIHJldHVybiB7IHBpZWNlczogbmV3UGllY2VzIH07XG4gIH07XG5cbiAgLy8gQ2hlY2sgaWYgYSBraW5nIGlzIGluIGNoZWNrIGluIGEgZ2l2ZW4gZ2FtZSBzdGF0ZVxuICBjb25zdCBpc0tpbmdJbkNoZWNrID0gKGdhbWVTdGF0ZSwga2luZ0NvbG9yKSA9PiB7XG4gICAgaWYgKCFnYW1lU3RhdGU/LnBpZWNlcykgcmV0dXJuIGZhbHNlO1xuICAgIFxuICAgIC8vIEZpbmQgdGhlIGtpbmdcbiAgICBjb25zdCBraW5nID0gZ2FtZVN0YXRlLnBpZWNlcy5maW5kKHAgPT4gcC50eXBlID09PSAnS0lORycgJiYgcC5jb2xvciA9PT0ga2luZ0NvbG9yKTtcbiAgICBpZiAoIWtpbmcpIHJldHVybiBmYWxzZTtcbiAgICBcbiAgICAvLyBDaGVjayBpZiBhbnkgb3Bwb25lbnQgcGllY2UgY2FuIGF0dGFjayB0aGUga2luZ1xuICAgIGNvbnN0IG9wcG9uZW50Q29sb3IgPSBraW5nQ29sb3IgPT09ICdXSElURScgPyAnQkxBQ0snIDogJ1dISVRFJztcbiAgICBjb25zdCBvcHBvbmVudFBpZWNlcyA9IGdhbWVTdGF0ZS5waWVjZXMuZmlsdGVyKHAgPT4gcC5jb2xvciA9PT0gb3Bwb25lbnRDb2xvcik7XG4gICAgXG4gICAgZm9yIChsZXQgcGllY2Ugb2Ygb3Bwb25lbnRQaWVjZXMpIHtcbiAgICAgIGlmIChjYW5QaWVjZUF0dGFja1NxdWFyZShnYW1lU3RhdGUsIHBpZWNlLCBraW5nLnJvdywga2luZy5jb2wpKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGAke3BpZWNlLnR5cGV9IGF0ICR7cGllY2Uucm93fSwke3BpZWNlLmNvbH0gYXR0YWNrcyAke2tpbmdDb2xvcn0ga2luZyBhdCAke2tpbmcucm93fSwke2tpbmcuY29sfWApO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9O1xuXG4gIC8vIENoZWNrIGlmIGEgcGllY2UgY2FuIGF0dGFjayBhIHNwZWNpZmljIHNxdWFyZVxuICBjb25zdCBjYW5QaWVjZUF0dGFja1NxdWFyZSA9IChnYW1lU3RhdGUsIHBpZWNlLCB0YXJnZXRSb3csIHRhcmdldENvbCkgPT4ge1xuICAgIGNvbnN0IHJvd0RpZmYgPSBNYXRoLmFicyh0YXJnZXRSb3cgLSBwaWVjZS5yb3cpO1xuICAgIGNvbnN0IGNvbERpZmYgPSBNYXRoLmFicyh0YXJnZXRDb2wgLSBwaWVjZS5jb2wpO1xuICAgIFxuICAgIC8vIEZvciBjaGVjayBkZXRlY3Rpb24sIHdlIG9ubHkgY2FyZSBhYm91dCBzcXVhcmVzIGEgcGllY2UgY2FuIGF0dGFjaywgbm90IG1vdmUgdG9cbiAgICBzd2l0Y2ggKHBpZWNlLnR5cGUpIHtcbiAgICAgIGNhc2UgJ1BBV04nOlxuICAgICAgICBjb25zdCBkaXJlY3Rpb24gPSBwaWVjZS5jb2xvciA9PT0gJ1dISVRFJyA/IC0xIDogMTtcbiAgICAgICAgY29uc3Qgcm93RGlmZlNpZ25lZCA9IHRhcmdldFJvdyAtIHBpZWNlLnJvdztcbiAgICAgICAgLy8gUGF3bnMgb25seSBhdHRhY2sgZGlhZ29uYWxseSBmb3IgY2hlY2sgcHVycG9zZXNcbiAgICAgICAgcmV0dXJuIGNvbERpZmYgPT09IDEgJiYgcm93RGlmZlNpZ25lZCA9PT0gZGlyZWN0aW9uO1xuICAgICAgICBcbiAgICAgIGNhc2UgJ1JPT0snOlxuICAgICAgICByZXR1cm4gKHJvd0RpZmYgPT09IDAgfHwgY29sRGlmZiA9PT0gMCkgJiYgaXNQYXRoQ2xlYXJJbkdhbWUoZ2FtZVN0YXRlLCBwaWVjZS5yb3csIHBpZWNlLmNvbCwgdGFyZ2V0Um93LCB0YXJnZXRDb2wpO1xuICAgICAgICBcbiAgICAgIGNhc2UgJ0JJU0hPUCc6XG4gICAgICAgIHJldHVybiAocm93RGlmZiA9PT0gY29sRGlmZikgJiYgaXNQYXRoQ2xlYXJJbkdhbWUoZ2FtZVN0YXRlLCBwaWVjZS5yb3csIHBpZWNlLmNvbCwgdGFyZ2V0Um93LCB0YXJnZXRDb2wpO1xuICAgICAgICBcbiAgICAgIGNhc2UgJ1FVRUVOJzpcbiAgICAgICAgcmV0dXJuIChyb3dEaWZmID09PSAwIHx8IGNvbERpZmYgPT09IDAgfHwgcm93RGlmZiA9PT0gY29sRGlmZikgJiYgXG4gICAgICAgICAgICAgICBpc1BhdGhDbGVhckluR2FtZShnYW1lU3RhdGUsIHBpZWNlLnJvdywgcGllY2UuY29sLCB0YXJnZXRSb3csIHRhcmdldENvbCk7XG4gICAgICAgICAgICAgICBcbiAgICAgIGNhc2UgJ0tJTkcnOlxuICAgICAgICByZXR1cm4gcm93RGlmZiA8PSAxICYmIGNvbERpZmYgPD0gMTtcbiAgICAgICAgXG4gICAgICBjYXNlICdLTklHSFQnOlxuICAgICAgICByZXR1cm4gKHJvd0RpZmYgPT09IDIgJiYgY29sRGlmZiA9PT0gMSkgfHwgKHJvd0RpZmYgPT09IDEgJiYgY29sRGlmZiA9PT0gMik7XG4gICAgICAgIFxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfTtcblxuICAvLyBDaGVjayBpZiBwYXRoIGlzIGNsZWFyIGluIGEgZ2l2ZW4gZ2FtZSBzdGF0ZVxuICBjb25zdCBpc1BhdGhDbGVhckluR2FtZSA9IChnYW1lU3RhdGUsIGZyb21Sb3csIGZyb21Db2wsIHRvUm93LCB0b0NvbCkgPT4ge1xuICAgIGNvbnN0IHJvd1N0ZXAgPSBNYXRoLnNpZ24odG9Sb3cgLSBmcm9tUm93KTtcbiAgICBjb25zdCBjb2xTdGVwID0gTWF0aC5zaWduKHRvQ29sIC0gZnJvbUNvbCk7XG4gICAgXG4gICAgbGV0IGN1cnJlbnRSb3cgPSBmcm9tUm93ICsgcm93U3RlcDtcbiAgICBsZXQgY3VycmVudENvbCA9IGZyb21Db2wgKyBjb2xTdGVwO1xuICAgIFxuICAgIHdoaWxlIChjdXJyZW50Um93ICE9PSB0b1JvdyB8fCBjdXJyZW50Q29sICE9PSB0b0NvbCkge1xuICAgICAgaWYgKGdhbWVTdGF0ZS5waWVjZXMuZmluZChwID0+IHAucm93ID09PSBjdXJyZW50Um93ICYmIHAuY29sID09PSBjdXJyZW50Q29sKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgICBjdXJyZW50Um93ICs9IHJvd1N0ZXA7XG4gICAgICBjdXJyZW50Q29sICs9IGNvbFN0ZXA7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiB0cnVlO1xuICB9O1xuXG4gIGNvbnN0IGlzVmFsaWRNb3ZlUGF0dGVybiA9IChwaWVjZSwgZnJvbVJvdywgZnJvbUNvbCwgdG9Sb3csIHRvQ29sKSA9PiB7XG4gICAgY29uc3Qgcm93RGlmZiA9IE1hdGguYWJzKHRvUm93IC0gZnJvbVJvdyk7XG4gICAgY29uc3QgY29sRGlmZiA9IE1hdGguYWJzKHRvQ29sIC0gZnJvbUNvbCk7XG4gICAgY29uc3QgdGFyZ2V0UGllY2UgPSBnZXRQaWVjZUF0KHRvUm93LCB0b0NvbCk7XG4gICAgXG4gICAgLy8gQ2FuJ3QgY2FwdHVyZSB5b3VyIG93biBwaWVjZXNcbiAgICBpZiAodGFyZ2V0UGllY2UgJiYgdGFyZ2V0UGllY2UuY29sb3IgPT09IHBpZWNlLmNvbG9yKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIFxuICAgIC8vIEJhc2ljIG1vdmVtZW50IHBhdHRlcm5zXG4gICAgc3dpdGNoIChwaWVjZS50eXBlKSB7XG4gICAgICBjYXNlICdQQVdOJzpcbiAgICAgICAgY29uc3QgZGlyZWN0aW9uID0gcGllY2UuY29sb3IgPT09ICdXSElURScgPyAtMSA6IDE7XG4gICAgICAgIGNvbnN0IHJvd0RpZmZTaWduZWQgPSB0b1JvdyAtIGZyb21Sb3c7XG4gICAgICAgIFxuICAgICAgICBpZiAoY29sRGlmZiA9PT0gMCkge1xuICAgICAgICAgIC8vIEZvcndhcmQgbW92ZXMgLSBjYW4ndCBjYXB0dXJlXG4gICAgICAgICAgaWYgKHRhcmdldFBpZWNlKSByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgaWYgKHJvd0RpZmZTaWduZWQgPT09IGRpcmVjdGlvbikgcmV0dXJuIHRydWU7XG4gICAgICAgICAgaWYgKHBpZWNlLmhhc01vdmVkID09PSBmYWxzZSAmJiByb3dEaWZmU2lnbmVkID09PSAyICogZGlyZWN0aW9uICYmICFnZXRQaWVjZUF0KGZyb21Sb3cgKyBkaXJlY3Rpb24sIGZyb21Db2wpKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoY29sRGlmZiA9PT0gMSAmJiByb3dEaWZmU2lnbmVkID09PSBkaXJlY3Rpb24pIHtcbiAgICAgICAgICAvLyBEaWFnb25hbCBtb3ZlcyAtIG11c3QgY2FwdHVyZVxuICAgICAgICAgIHJldHVybiB0YXJnZXRQaWVjZSAhPT0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIFxuICAgICAgY2FzZSAnUk9PSyc6XG4gICAgICAgIHJldHVybiAocm93RGlmZiA9PT0gMCB8fCBjb2xEaWZmID09PSAwKSAmJiBpc1BhdGhDbGVhclNpbXBsZShmcm9tUm93LCBmcm9tQ29sLCB0b1JvdywgdG9Db2wpO1xuICAgICAgICBcbiAgICAgIGNhc2UgJ0JJU0hPUCc6XG4gICAgICAgIHJldHVybiAocm93RGlmZiA9PT0gY29sRGlmZikgJiYgaXNQYXRoQ2xlYXJTaW1wbGUoZnJvbVJvdywgZnJvbUNvbCwgdG9Sb3csIHRvQ29sKTtcbiAgICAgICAgXG4gICAgICBjYXNlICdRVUVFTic6XG4gICAgICAgIHJldHVybiAocm93RGlmZiA9PT0gMCB8fCBjb2xEaWZmID09PSAwIHx8IHJvd0RpZmYgPT09IGNvbERpZmYpICYmIFxuICAgICAgICAgICAgICAgaXNQYXRoQ2xlYXJTaW1wbGUoZnJvbVJvdywgZnJvbUNvbCwgdG9Sb3csIHRvQ29sKTtcbiAgICAgICAgICAgICAgIFxuICAgICAgY2FzZSAnS0lORyc6XG4gICAgICAgIHJldHVybiByb3dEaWZmIDw9IDEgJiYgY29sRGlmZiA8PSAxO1xuICAgICAgICBcbiAgICAgIGNhc2UgJ0tOSUdIVCc6XG4gICAgICAgIHJldHVybiAocm93RGlmZiA9PT0gMiAmJiBjb2xEaWZmID09PSAxKSB8fCAocm93RGlmZiA9PT0gMSAmJiBjb2xEaWZmID09PSAyKTtcbiAgICAgICAgXG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGlzUGF0aENsZWFyU2ltcGxlID0gKGZyb21Sb3csIGZyb21Db2wsIHRvUm93LCB0b0NvbCkgPT4ge1xuICAgIGNvbnN0IHJvd1N0ZXAgPSBNYXRoLnNpZ24odG9Sb3cgLSBmcm9tUm93KTtcbiAgICBjb25zdCBjb2xTdGVwID0gTWF0aC5zaWduKHRvQ29sIC0gZnJvbUNvbCk7XG4gICAgXG4gICAgbGV0IGN1cnJlbnRSb3cgPSBmcm9tUm93ICsgcm93U3RlcDtcbiAgICBsZXQgY3VycmVudENvbCA9IGZyb21Db2wgKyBjb2xTdGVwO1xuICAgIFxuICAgIHdoaWxlIChjdXJyZW50Um93ICE9PSB0b1JvdyB8fCBjdXJyZW50Q29sICE9PSB0b0NvbCkge1xuICAgICAgaWYgKGdldFBpZWNlQXQoY3VycmVudFJvdywgY3VycmVudENvbCkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgY3VycmVudFJvdyArPSByb3dTdGVwO1xuICAgICAgY3VycmVudENvbCArPSBjb2xTdGVwO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfTtcblxuICBjb25zdCBnZXRQaWVjZUF0ID0gKHJvdywgY29sKSA9PiB7XG4gICAgcmV0dXJuIGdhbWU/LnBpZWNlcz8uZmluZChwaWVjZSA9PiBwaWVjZS5yb3cgPT09IHJvdyAmJiBwaWVjZS5jb2wgPT09IGNvbCk7XG4gIH07XG5cbiAgY29uc3QgZ2V0UGllY2VTeW1ib2wgPSAocGllY2UpID0+IHtcbiAgICBpZiAoIXBpZWNlKSByZXR1cm4gJyc7XG4gICAgXG4gICAgY29uc3QgcGllY2VTeW1ib2xzID0ge1xuICAgICAgJ1dISVRFJzoge1xuICAgICAgICAnS0lORyc6ICfimZQnLFxuICAgICAgICAnUVVFRU4nOiAn4pmVJywgXG4gICAgICAgICdST09LJzogJ+KZlicsXG4gICAgICAgICdCSVNIT1AnOiAn4pmXJyxcbiAgICAgICAgJ0tOSUdIVCc6ICfimZgnLFxuICAgICAgICAnUEFXTic6ICfimZknXG4gICAgICB9LFxuICAgICAgJ0JMQUNLJzoge1xuICAgICAgICAnS0lORyc6ICfimZonLFxuICAgICAgICAnUVVFRU4nOiAn4pmbJyxcbiAgICAgICAgJ1JPT0snOiAn4pmcJywgXG4gICAgICAgICdCSVNIT1AnOiAn4pmdJyxcbiAgICAgICAgJ0tOSUdIVCc6ICfimZ4nLFxuICAgICAgICAnUEFXTic6ICfimZ8nXG4gICAgICB9XG4gICAgfTtcbiAgICBcbiAgICByZXR1cm4gcGllY2VTeW1ib2xzW3BpZWNlLmNvbG9yXT8uW3BpZWNlLnR5cGVdIHx8IHBpZWNlLnR5cGVbMF07XG4gIH07XG5cbiAgY29uc3QgaXNWYWxpZE1vdmVTcXVhcmUgPSAocm93LCBjb2wpID0+IHtcbiAgICByZXR1cm4gdmFsaWRNb3Zlcy5zb21lKG1vdmUgPT4gbW92ZS5yb3cgPT09IHJvdyAmJiBtb3ZlLmNvbCA9PT0gY29sKTtcbiAgfTtcblxuICBpZiAoIWdhbWUpIHJldHVybiA8ZGl2PkxvYWRpbmcuLi48L2Rpdj47XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2PlxuICAgICAge21vdmVFcnJvciAmJiAoXG4gICAgICAgIDxkaXYgc3R5bGU9e3sgY29sb3I6ICdyZWQnLCBtYXJnaW5Cb3R0b206ICcxMHB4JyB9fT5cbiAgICAgICAgICB7bW92ZUVycm9yfVxuICAgICAgICA8L2Rpdj5cbiAgICAgICl9XG4gICAgICBcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2hlc3MtYm9hcmRcIj5cbiAgICAgICAge0FycmF5LmZyb20oeyBsZW5ndGg6IDggfSwgKF8sIHJvdykgPT4gKFxuICAgICAgICAgIDxkaXYga2V5PXtyb3d9IGNsYXNzTmFtZT1cImNoZXNzLXJvd1wiPlxuICAgICAgICAgICAge0FycmF5LmZyb20oeyBsZW5ndGg6IDggfSwgKF8sIGNvbCkgPT4ge1xuICAgICAgICAgICAgICBjb25zdCBwaWVjZSA9IGdldFBpZWNlQXQocm93LCBjb2wpO1xuICAgICAgICAgICAgICBjb25zdCBpc1NlbGVjdGVkID0gc2VsZWN0ZWRTcXVhcmUgJiYgc2VsZWN0ZWRTcXVhcmUucm93ID09PSByb3cgJiYgc2VsZWN0ZWRTcXVhcmUuY29sID09PSBjb2w7XG4gICAgICAgICAgICAgIGNvbnN0IGlzVmFsaWRNb3ZlID0gaXNWYWxpZE1vdmVTcXVhcmUocm93LCBjb2wpO1xuICAgICAgICAgICAgICBjb25zdCBpc0xpZ2h0ID0gKHJvdyArIGNvbCkgJSAyID09PSAwO1xuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICBrZXk9e2NvbH1cbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17YGNoZXNzLXNxdWFyZSAke2lzTGlnaHQgPyAnbGlnaHQnIDogJ2RhcmsnfSAke2lzU2VsZWN0ZWQgPyAnc2VsZWN0ZWQnIDogJyd9YH1cbiAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IGhhbmRsZVNxdWFyZUNsaWNrKHJvdywgY29sKX1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICB7aXNWYWxpZE1vdmUgJiYgPGRpdiBjbGFzc05hbWU9XCJ2YWxpZC1tb3ZlLW92ZXJsYXlcIj48L2Rpdj59XG4gICAgICAgICAgICAgICAgICB7cGllY2UgJiYgKFxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJwaWVjZVwiPlxuICAgICAgICAgICAgICAgICAgICAgIHtnZXRQaWVjZVN5bWJvbChwaWVjZSl9XG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9KX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKSl9XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENoZXNzQm9hcmQ7Il0sIm5hbWVzIjpbInVzZVN0YXRlIiwidXNlRWZmZWN0IiwidXNlTXV0YXRpb24iLCJncWwiLCJNQUtFX01PVkUiLCJDaGVzc0JvYXJkIiwiZ2FtZSIsImdhbWVJZCIsIm9uTW92ZUNvbXBsZXRlIiwic2VsZWN0ZWRTcXVhcmUiLCJzZXRTZWxlY3RlZFNxdWFyZSIsInZhbGlkTW92ZXMiLCJzZXRWYWxpZE1vdmVzIiwibW92ZUVycm9yIiwic2V0TW92ZUVycm9yIiwibWFrZU1vdmUiLCJsb2FkaW5nIiwibW92ZUxvYWRpbmciLCJoYW5kbGVTcXVhcmVDbGljayIsInJvdyIsImNvbCIsImNvbnNvbGUiLCJsb2ciLCJwaWVjZSIsImdldFBpZWNlQXQiLCJjb2xvciIsImN1cnJlbnRQbGF5ZXIiLCJnZXRWYWxpZE1vdmVzRm9yUGllY2UiLCJyZXN1bHQiLCJ2YXJpYWJsZXMiLCJmcm9tUm93IiwiZnJvbUNvbCIsInRvUm93IiwidG9Db2wiLCJlcnJvciIsIm1vdmVzIiwiciIsImMiLCJpc1ZhbGlkTW92ZVBhdHRlcm4iLCJpc0xlZ2FsTW92ZSIsInB1c2giLCJzaW11bGF0ZWRHYW1lIiwic2ltdWxhdGVNb3ZlIiwid291bGRCZUluQ2hlY2siLCJpc0tpbmdJbkNoZWNrIiwicGllY2VzIiwibmV3UGllY2VzIiwibWFwIiwicGllY2VJbmRleCIsImZpbmRJbmRleCIsInAiLCJjYXB0dXJlZEluZGV4Iiwic3BsaWNlIiwiZ2FtZVN0YXRlIiwia2luZ0NvbG9yIiwia2luZyIsImZpbmQiLCJ0eXBlIiwib3Bwb25lbnRDb2xvciIsIm9wcG9uZW50UGllY2VzIiwiZmlsdGVyIiwiY2FuUGllY2VBdHRhY2tTcXVhcmUiLCJ0YXJnZXRSb3ciLCJ0YXJnZXRDb2wiLCJyb3dEaWZmIiwiTWF0aCIsImFicyIsImNvbERpZmYiLCJkaXJlY3Rpb24iLCJyb3dEaWZmU2lnbmVkIiwiaXNQYXRoQ2xlYXJJbkdhbWUiLCJyb3dTdGVwIiwic2lnbiIsImNvbFN0ZXAiLCJjdXJyZW50Um93IiwiY3VycmVudENvbCIsInRhcmdldFBpZWNlIiwiaGFzTW92ZWQiLCJpc1BhdGhDbGVhclNpbXBsZSIsImdldFBpZWNlU3ltYm9sIiwicGllY2VTeW1ib2xzIiwiaXNWYWxpZE1vdmVTcXVhcmUiLCJzb21lIiwibW92ZSIsImRpdiIsInN0eWxlIiwibWFyZ2luQm90dG9tIiwiY2xhc3NOYW1lIiwiQXJyYXkiLCJmcm9tIiwibGVuZ3RoIiwiXyIsImlzU2VsZWN0ZWQiLCJpc1ZhbGlkTW92ZSIsImlzTGlnaHQiLCJvbkNsaWNrIiwic3BhbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/ChessBoard.js\n"));

/***/ })

});