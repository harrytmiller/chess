"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/components/ChessBoard.js":
/*!**************************************!*\
  !*** ./src/components/ChessBoard.js ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @swc/helpers/_/_tagged_template_literal */ \"./node_modules/@swc/helpers/esm/_tagged_template_literal.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! styled-jsx/style */ \"./node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @apollo/client */ \"./node_modules/@apollo/client/index.js\");\n\nfunction _templateObject() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n  mutation MakeMove($gameId: ID!, $fromRow: Int!, $fromCol: Int!, $toRow: Int!, $toCol: Int!) {\\n    makeMove(gameId: $gameId, fromRow: $fromRow, fromCol: $fromCol, toRow: $toRow, toCol: $toCol) {\\n      fromRow\\n      fromCol\\n      toRow\\n      toCol\\n      pieceType\\n      pieceColor\\n      moveNumber\\n    }\\n  }\\n\"\n    ]);\n    _templateObject = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject1() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n  query GetGame($gameId: ID!) {\\n    getGame(gameId: $gameId) {\\n      id\\n      status\\n      currentPlayer\\n      winner\\n      gameType\\n      aiDifficulty\\n      aiColor\\n      pieces {\\n        type\\n        color\\n        row\\n        col\\n        hasMoved\\n      }\\n    }\\n  }\\n\"\n    ]);\n    _templateObject1 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject2() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n  query IsAITurn($gameId: ID!) {\\n    isAITurn(gameId: $gameId)\\n  }\\n\"\n    ]);\n    _templateObject2 = function() {\n        return data;\n    };\n    return data;\n}\n\nvar _s = $RefreshSig$();\n\n\n\nconst MAKE_MOVE = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_4__.gql)(_templateObject());\nconst GET_GAME = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_4__.gql)(_templateObject1());\nconst IS_AI_TURN = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_4__.gql)(_templateObject2());\nconst ChessBoard = (param)=>{\n    let { game, gameId, onMoveComplete } = param;\n    var _game_aiDifficulty;\n    _s();\n    const [selectedSquare, setSelectedSquare] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(null);\n    const [validMoves, setValidMoves] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)([]);\n    const [moveError, setMoveError] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(null);\n    const [isAIThinking, setIsAIThinking] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(false);\n    const [makeMove, { loading: moveLoading }] = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_4__.useMutation)(MAKE_MOVE);\n    // Query to check if it's AI's turn\n    const { data: aiTurnData, refetch: refetchAITurn } = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_4__.useQuery)(IS_AI_TURN, {\n        variables: {\n            gameId\n        },\n        skip: !(game === null || game === void 0 ? void 0 : game.gameType) || game.gameType !== \"HUMAN_VS_AI\",\n        pollInterval: (game === null || game === void 0 ? void 0 : game.gameType) === \"HUMAN_VS_AI\" && (game === null || game === void 0 ? void 0 : game.status) === \"ACTIVE\" ? 2000 : 0\n    });\n    // Query to get updated game state\n    const { refetch: refetchGame } = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_4__.useQuery)(GET_GAME, {\n        variables: {\n            gameId\n        },\n        skip: true,\n        fetchPolicy: \"network-only\"\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(()=>{\n        if ((game === null || game === void 0 ? void 0 : game.gameType) === \"HUMAN_VS_AI\" && (aiTurnData === null || aiTurnData === void 0 ? void 0 : aiTurnData.isAITurn) && !isAIThinking) {\n            console.log(\"AI turn detected, starting AI thinking...\");\n            setIsAIThinking(true);\n            // Wait for AI move to complete, then refetch\n            const timeout = setTimeout(async ()=>{\n                console.log(\"Checking for AI move completion...\");\n                try {\n                    const gameResult = await refetchGame();\n                    await refetchAITurn();\n                    console.log(\"Refetch completed, calling onMoveComplete\");\n                    setIsAIThinking(false);\n                    // Force the parent component to update\n                    if (onMoveComplete) {\n                        onMoveComplete();\n                    }\n                } catch (error) {\n                    console.error(\"Error during AI move refetch:\", error);\n                    setIsAIThinking(false);\n                }\n            }, 2000); // Reduced to 2 seconds since AI completes quickly\n            return ()=>clearTimeout(timeout);\n        }\n    }, [\n        aiTurnData === null || aiTurnData === void 0 ? void 0 : aiTurnData.isAITurn,\n        game === null || game === void 0 ? void 0 : game.gameType,\n        refetchGame,\n        refetchAITurn,\n        onMoveComplete,\n        isAIThinking\n    ]);\n    // Additional effect to handle when AI turn ends\n    (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(()=>{\n        if ((game === null || game === void 0 ? void 0 : game.gameType) === \"HUMAN_VS_AI\" && !(aiTurnData === null || aiTurnData === void 0 ? void 0 : aiTurnData.isAITurn) && isAIThinking) {\n            console.log(\"AI turn ended, stopping thinking indicator\");\n            setIsAIThinking(false);\n            if (onMoveComplete) {\n                onMoveComplete();\n            }\n        }\n    }, [\n        aiTurnData === null || aiTurnData === void 0 ? void 0 : aiTurnData.isAITurn,\n        game === null || game === void 0 ? void 0 : game.gameType,\n        isAIThinking,\n        onMoveComplete\n    ]);\n    const handleSquareClick = async (row, col)=>{\n        console.log(\"Square clicked:\", row, col);\n        // Don't allow moves during AI turn or when AI is thinking\n        if (isAIThinking || (game === null || game === void 0 ? void 0 : game.gameType) === \"HUMAN_VS_AI\" && (aiTurnData === null || aiTurnData === void 0 ? void 0 : aiTurnData.isAITurn)) {\n            console.log(\"Blocking move - AI is thinking or it's AI turn\");\n            return;\n        }\n        // Clear any previous errors\n        setMoveError(null);\n        if (!selectedSquare) {\n            const piece = getPieceAt(row, col);\n            console.log(\"Piece at clicked square:\", piece);\n            console.log(\"Game type:\", game === null || game === void 0 ? void 0 : game.gameType);\n            console.log(\"Current player:\", game === null || game === void 0 ? void 0 : game.currentPlayer);\n            if (piece) {\n                // For AI games, human always plays white\n                if ((game === null || game === void 0 ? void 0 : game.gameType) === \"HUMAN_VS_AI\") {\n                    if (piece.color === \"WHITE\" && game.currentPlayer === \"WHITE\") {\n                        console.log(\"Selecting WHITE piece in AI game:\", piece);\n                        setSelectedSquare({\n                            row,\n                            col\n                        });\n                        await getValidMovesForPiece(row, col);\n                    } else {\n                        console.log(\"Cannot select piece in AI game - not your turn or not your color\");\n                    }\n                } else {\n                    // Human vs Human - allow selecting current player's pieces\n                    if (piece.color === (game === null || game === void 0 ? void 0 : game.currentPlayer)) {\n                        console.log(\"Selecting piece in human game:\", piece);\n                        setSelectedSquare({\n                            row,\n                            col\n                        });\n                        await getValidMovesForPiece(row, col);\n                    } else {\n                        console.log(\"Cannot select piece - not current player\");\n                    }\n                }\n            } else {\n                console.log(\"No piece at this square\");\n            }\n        } else {\n            console.log(\"Making move from\", selectedSquare, \"to\", {\n                row,\n                col\n            });\n            try {\n                const result = await makeMove({\n                    variables: {\n                        gameId,\n                        fromRow: selectedSquare.row,\n                        fromCol: selectedSquare.col,\n                        toRow: row,\n                        toCol: col\n                    }\n                });\n                console.log(\"Move result:\", result);\n                setSelectedSquare(null);\n                setValidMoves([]);\n                // For AI games, the move completion and AI response will be handled by the useEffect\n                if ((game === null || game === void 0 ? void 0 : game.gameType) !== \"HUMAN_VS_AI\") {\n                    onMoveComplete();\n                }\n            } catch (error) {\n                console.error(\"Move error:\", error);\n                setMoveError(\"Invalid move\");\n                setSelectedSquare(null);\n                setValidMoves([]);\n            }\n        }\n    };\n    const getValidMovesForPiece = async (row, col)=>{\n        const piece = getPieceAt(row, col);\n        if (!piece) return;\n        const moves = [];\n        // Test each square on the board to see if it's a valid move\n        for(let r = 0; r < 8; r++){\n            for(let c = 0; c < 8; c++){\n                if (r === row && c === col) continue;\n                // First check basic movement pattern\n                if (isValidMovePattern(piece, row, col, r, c)) {\n                    // Then check if this move would be legal (doesn't put own king in check)\n                    if (isLegalMove(row, col, r, c)) {\n                        moves.push({\n                            row: r,\n                            col: c\n                        });\n                    }\n                }\n            }\n        }\n        setValidMoves(moves);\n    };\n    // Check if a move is legal (doesn't put own king in check)\n    const isLegalMove = (fromRow, fromCol, toRow, toCol)=>{\n        // Simulate the move\n        const simulatedGame = simulateMove(fromRow, fromCol, toRow, toCol);\n        // Check if this move would put own king in check\n        const piece = getPieceAt(fromRow, fromCol);\n        return !isKingInCheck(simulatedGame, piece.color);\n    };\n    // Simulate a move and return the resulting game state\n    const simulateMove = (fromRow, fromCol, toRow, toCol)=>{\n        if (!(game === null || game === void 0 ? void 0 : game.pieces)) return null;\n        // Create a copy of the pieces array\n        const newPieces = game.pieces.map((piece)=>({\n                ...piece\n            }));\n        // Find the piece to move\n        const pieceIndex = newPieces.findIndex((p)=>p.row === fromRow && p.col === fromCol);\n        if (pieceIndex === -1) return null;\n        // Remove any piece at destination (capture)\n        const capturedIndex = newPieces.findIndex((p)=>p.row === toRow && p.col === toCol);\n        if (capturedIndex !== -1) {\n            newPieces.splice(capturedIndex, 1);\n        }\n        // Move the piece\n        newPieces[pieceIndex] = {\n            ...newPieces[pieceIndex],\n            row: toRow,\n            col: toCol\n        };\n        return {\n            pieces: newPieces\n        };\n    };\n    // Check if a king is in check in a given game state\n    const isKingInCheck = (gameState, kingColor)=>{\n        if (!(gameState === null || gameState === void 0 ? void 0 : gameState.pieces)) return false;\n        // Find the king\n        const king = gameState.pieces.find((p)=>p.type === \"KING\" && p.color === kingColor);\n        if (!king) return false;\n        // Check if any opponent piece can attack the king\n        const opponentColor = kingColor === \"WHITE\" ? \"BLACK\" : \"WHITE\";\n        const opponentPieces = gameState.pieces.filter((p)=>p.color === opponentColor);\n        for (let piece of opponentPieces){\n            if (canPieceAttackSquare(gameState, piece, king.row, king.col)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    // Check if a piece can attack a specific square\n    const canPieceAttackSquare = (gameState, piece, targetRow, targetCol)=>{\n        const rowDiff = Math.abs(targetRow - piece.row);\n        const colDiff = Math.abs(targetCol - piece.col);\n        switch(piece.type){\n            case \"PAWN\":\n                const direction = piece.color === \"WHITE\" ? -1 : 1;\n                const rowDiffSigned = targetRow - piece.row;\n                // Pawns attack diagonally\n                return colDiff === 1 && rowDiffSigned === direction;\n            case \"ROOK\":\n                return (rowDiff === 0 || colDiff === 0) && isPathClearInGame(gameState, piece.row, piece.col, targetRow, targetCol);\n            case \"BISHOP\":\n                return rowDiff === colDiff && isPathClearInGame(gameState, piece.row, piece.col, targetRow, targetCol);\n            case \"QUEEN\":\n                return (rowDiff === 0 || colDiff === 0 || rowDiff === colDiff) && isPathClearInGame(gameState, piece.row, piece.col, targetRow, targetCol);\n            case \"KING\":\n                return rowDiff <= 1 && colDiff <= 1;\n            case \"KNIGHT\":\n                return rowDiff === 2 && colDiff === 1 || rowDiff === 1 && colDiff === 2;\n            default:\n                return false;\n        }\n    };\n    // Check if path is clear in a given game state\n    const isPathClearInGame = (gameState, fromRow, fromCol, toRow, toCol)=>{\n        const rowStep = Math.sign(toRow - fromRow);\n        const colStep = Math.sign(toCol - fromCol);\n        let currentRow = fromRow + rowStep;\n        let currentCol = fromCol + colStep;\n        while(currentRow !== toRow || currentCol !== toCol){\n            if (gameState.pieces.find((p)=>p.row === currentRow && p.col === currentCol)) {\n                return false;\n            }\n            currentRow += rowStep;\n            currentCol += colStep;\n        }\n        return true;\n    };\n    const isValidMovePattern = (piece, fromRow, fromCol, toRow, toCol)=>{\n        const rowDiff = Math.abs(toRow - fromRow);\n        const colDiff = Math.abs(toCol - fromCol);\n        const targetPiece = getPieceAt(toRow, toCol);\n        // Can't capture your own pieces\n        if (targetPiece && targetPiece.color === piece.color) {\n            return false;\n        }\n        // Basic movement patterns (without considering check)\n        switch(piece.type){\n            case \"PAWN\":\n                const direction = piece.color === \"WHITE\" ? -1 : 1;\n                const rowDiffSigned = toRow - fromRow;\n                if (colDiff === 0) {\n                    // Forward moves\n                    if (rowDiffSigned === direction && !targetPiece) return true;\n                    if (piece.hasMoved === false && rowDiffSigned === 2 * direction && !targetPiece && !getPieceAt(fromRow + direction, fromCol)) {\n                        return true;\n                    }\n                } else if (colDiff === 1 && rowDiffSigned === direction && targetPiece) {\n                    // Diagonal captures only\n                    return true;\n                }\n                return false;\n            case \"ROOK\":\n                return (rowDiff === 0 || colDiff === 0) && isPathClearSimple(fromRow, fromCol, toRow, toCol);\n            case \"BISHOP\":\n                return rowDiff === colDiff && isPathClearSimple(fromRow, fromCol, toRow, toCol);\n            case \"QUEEN\":\n                return (rowDiff === 0 || colDiff === 0 || rowDiff === colDiff) && isPathClearSimple(fromRow, fromCol, toRow, toCol);\n            case \"KING\":\n                return rowDiff <= 1 && colDiff <= 1;\n            case \"KNIGHT\":\n                return rowDiff === 2 && colDiff === 1 || rowDiff === 1 && colDiff === 2;\n            default:\n                return false;\n        }\n    };\n    const isPathClearSimple = (fromRow, fromCol, toRow, toCol)=>{\n        const rowStep = Math.sign(toRow - fromRow);\n        const colStep = Math.sign(toCol - fromCol);\n        let currentRow = fromRow + rowStep;\n        let currentCol = fromCol + colStep;\n        while(currentRow !== toRow || currentCol !== toCol){\n            if (getPieceAt(currentRow, currentCol)) {\n                return false;\n            }\n            currentRow += rowStep;\n            currentCol += colStep;\n        }\n        return true;\n    };\n    const getPieceAt = (row, col)=>{\n        var _game_pieces;\n        return game === null || game === void 0 ? void 0 : (_game_pieces = game.pieces) === null || _game_pieces === void 0 ? void 0 : _game_pieces.find((piece)=>piece.row === row && piece.col === col);\n    };\n    const getPieceSymbol = (piece)=>{\n        var _pieceSymbols_piece_color;\n        if (!piece) return \"\";\n        const pieceSymbols = {\n            \"WHITE\": {\n                \"KING\": \"♔\",\n                \"QUEEN\": \"♕\",\n                \"ROOK\": \"♖\",\n                \"BISHOP\": \"♗\",\n                \"KNIGHT\": \"♘\",\n                \"PAWN\": \"♙\"\n            },\n            \"BLACK\": {\n                \"KING\": \"♚\",\n                \"QUEEN\": \"♛\",\n                \"ROOK\": \"♜\",\n                \"BISHOP\": \"♝\",\n                \"KNIGHT\": \"♞\",\n                \"PAWN\": \"♟\"\n            }\n        };\n        return ((_pieceSymbols_piece_color = pieceSymbols[piece.color]) === null || _pieceSymbols_piece_color === void 0 ? void 0 : _pieceSymbols_piece_color[piece.type]) || piece.type[0];\n    };\n    const isValidMoveSquare = (row, col)=>{\n        return validMoves.some((move)=>move.row === row && move.col === col);\n    };\n    const getCurrentPlayerDisplay = ()=>{\n        if ((game === null || game === void 0 ? void 0 : game.gameType) === \"HUMAN_VS_AI\") {\n            if (game.currentPlayer === \"WHITE\") {\n                return \"Your turn\";\n            } else {\n                return isAIThinking ? \"AI is thinking...\" : \"AI's turn\";\n            }\n        } else {\n            return \"\".concat(game === null || game === void 0 ? void 0 : game.currentPlayer, \"'s turn\");\n        }\n    };\n    const isBoardDisabled = ()=>{\n        return isAIThinking || (game === null || game === void 0 ? void 0 : game.gameType) === \"HUMAN_VS_AI\" && (aiTurnData === null || aiTurnData === void 0 ? void 0 : aiTurnData.isAITurn);\n    };\n    if (!game) return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n        children: \"Loading...\"\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\Harry Miller\\\\chess-game\\\\frontend\\\\src\\\\components\\\\ChessBoard.js\",\n        lineNumber: 427,\n        columnNumber: 21\n    }, undefined);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n        className: \"jsx-612b2fa4b8d9c9bc\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                className: \"jsx-612b2fa4b8d9c9bc\" + \" \" + \"game-info\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                        className: \"jsx-612b2fa4b8d9c9bc\" + \" \" + \"current-player\",\n                        children: getCurrentPlayerDisplay()\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\Harry Miller\\\\chess-game\\\\frontend\\\\src\\\\components\\\\ChessBoard.js\",\n                        lineNumber: 432,\n                        columnNumber: 9\n                    }, undefined),\n                    game.gameType === \"HUMAN_VS_AI\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                        className: \"jsx-612b2fa4b8d9c9bc\" + \" \" + \"game-type-info\",\n                        children: [\n                            \"Playing against AI (\",\n                            (_game_aiDifficulty = game.aiDifficulty) === null || _game_aiDifficulty === void 0 ? void 0 : _game_aiDifficulty.toLowerCase(),\n                            \")\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\Harry Miller\\\\chess-game\\\\frontend\\\\src\\\\components\\\\ChessBoard.js\",\n                        lineNumber: 436,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\Harry Miller\\\\chess-game\\\\frontend\\\\src\\\\components\\\\ChessBoard.js\",\n                lineNumber: 431,\n                columnNumber: 7\n            }, undefined),\n            moveError && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                style: {\n                    color: \"red\",\n                    marginBottom: \"10px\"\n                },\n                className: \"jsx-612b2fa4b8d9c9bc\",\n                children: moveError\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Harry Miller\\\\chess-game\\\\frontend\\\\src\\\\components\\\\ChessBoard.js\",\n                lineNumber: 443,\n                columnNumber: 9\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                className: \"jsx-612b2fa4b8d9c9bc\" + \" \" + \"chess-board \".concat(isBoardDisabled() ? \"disabled\" : \"\"),\n                children: Array.from({\n                    length: 8\n                }, (_, row)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                        className: \"jsx-612b2fa4b8d9c9bc\" + \" \" + \"chess-row\",\n                        children: Array.from({\n                            length: 8\n                        }, (_, col)=>{\n                            const piece = getPieceAt(row, col);\n                            const isSelected = selectedSquare && selectedSquare.row === row && selectedSquare.col === col;\n                            const isValidMove = isValidMoveSquare(row, col);\n                            const isLight = (row + col) % 2 === 0;\n                            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                                onClick: ()=>handleSquareClick(row, col),\n                                style: {\n                                    cursor: isBoardDisabled() ? \"not-allowed\" : \"pointer\",\n                                    opacity: isBoardDisabled() ? 0.7 : 1\n                                },\n                                className: \"jsx-612b2fa4b8d9c9bc\" + \" \" + \"chess-square \".concat(isLight ? \"light\" : \"dark\", \" \").concat(isSelected ? \"selected\" : \"\"),\n                                children: [\n                                    isValidMove && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                                        className: \"jsx-612b2fa4b8d9c9bc\" + \" \" + \"valid-move-overlay\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\Harry Miller\\\\chess-game\\\\frontend\\\\src\\\\components\\\\ChessBoard.js\",\n                                        lineNumber: 467,\n                                        columnNumber: 35\n                                    }, undefined),\n                                    piece && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"span\", {\n                                        className: \"jsx-612b2fa4b8d9c9bc\" + \" \" + \"piece\",\n                                        children: getPieceSymbol(piece)\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\Harry Miller\\\\chess-game\\\\frontend\\\\src\\\\components\\\\ChessBoard.js\",\n                                        lineNumber: 469,\n                                        columnNumber: 21\n                                    }, undefined)\n                                ]\n                            }, col, true, {\n                                fileName: \"C:\\\\Users\\\\Harry Miller\\\\chess-game\\\\frontend\\\\src\\\\components\\\\ChessBoard.js\",\n                                lineNumber: 458,\n                                columnNumber: 17\n                            }, undefined);\n                        })\n                    }, row, false, {\n                        fileName: \"C:\\\\Users\\\\Harry Miller\\\\chess-game\\\\frontend\\\\src\\\\components\\\\ChessBoard.js\",\n                        lineNumber: 450,\n                        columnNumber: 11\n                    }, undefined))\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Harry Miller\\\\chess-game\\\\frontend\\\\src\\\\components\\\\ChessBoard.js\",\n                lineNumber: 448,\n                columnNumber: 7\n            }, undefined),\n            isAIThinking && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                className: \"jsx-612b2fa4b8d9c9bc\" + \" \" + \"ai-thinking-indicator\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                        className: \"jsx-612b2fa4b8d9c9bc\" + \" \" + \"spinner\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\Harry Miller\\\\chess-game\\\\frontend\\\\src\\\\components\\\\ChessBoard.js\",\n                        lineNumber: 482,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"span\", {\n                        className: \"jsx-612b2fa4b8d9c9bc\",\n                        children: \"AI is thinking...\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\Harry Miller\\\\chess-game\\\\frontend\\\\src\\\\components\\\\ChessBoard.js\",\n                        lineNumber: 483,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\Harry Miller\\\\chess-game\\\\frontend\\\\src\\\\components\\\\ChessBoard.js\",\n                lineNumber: 481,\n                columnNumber: 9\n            }, undefined),\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)((styled_jsx_style__WEBPACK_IMPORTED_MODULE_2___default()), {\n                id: \"612b2fa4b8d9c9bc\",\n                children: \".game-info.jsx-612b2fa4b8d9c9bc{margin-bottom:15px;text-align:center}.current-player.jsx-612b2fa4b8d9c9bc{font-size:18px;font-weight:bold;color:#333;margin-bottom:5px}.game-type-info.jsx-612b2fa4b8d9c9bc{font-size:14px;color:#666}.chess-board.disabled.jsx-612b2fa4b8d9c9bc{pointer-events:none}.ai-thinking-indicator.jsx-612b2fa4b8d9c9bc{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;margin-top:15px;padding:10px;background-color:#f8f9fa;-webkit-border-radius:5px;-moz-border-radius:5px;border-radius:5px;font-size:14px;color:#666}.spinner.jsx-612b2fa4b8d9c9bc{width:20px;height:20px;border:2px solid#f3f3f3;border-top:2px solid#007bff;-webkit-border-radius:50%;-moz-border-radius:50%;border-radius:50%;-webkit-animation:spin 1s linear infinite;-moz-animation:spin 1s linear infinite;-o-animation:spin 1s linear infinite;animation:spin 1s linear infinite;margin-right:10px}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-moz-keyframes spin{0%{-moz-transform:rotate(0deg);transform:rotate(0deg)}100%{-moz-transform:rotate(360deg);transform:rotate(360deg)}}@-o-keyframes spin{0%{-o-transform:rotate(0deg);transform:rotate(0deg)}100%{-o-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spin{0%{-webkit-transform:rotate(0deg);-moz-transform:rotate(0deg);-o-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);-moz-transform:rotate(360deg);-o-transform:rotate(360deg);transform:rotate(360deg)}}\"\n            }, void 0, false, void 0, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\Harry Miller\\\\chess-game\\\\frontend\\\\src\\\\components\\\\ChessBoard.js\",\n        lineNumber: 430,\n        columnNumber: 5\n    }, undefined);\n};\n_s(ChessBoard, \"RTrlxI4R0l4L/08nhzN3mH7WU+4=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_4__.useMutation,\n        _apollo_client__WEBPACK_IMPORTED_MODULE_4__.useQuery,\n        _apollo_client__WEBPACK_IMPORTED_MODULE_4__.useQuery\n    ];\n});\n_c = ChessBoard;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ChessBoard);\nvar _c;\n$RefreshReg$(_c, \"ChessBoard\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ChessBoard.js\n"));

/***/ })

});