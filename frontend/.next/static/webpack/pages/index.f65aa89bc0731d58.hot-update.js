"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/components/ChessBoard.js":
/*!**************************************!*\
  !*** ./src/components/ChessBoard.js ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @swc/helpers/_/_tagged_template_literal */ \"./node_modules/@swc/helpers/esm/_tagged_template_literal.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @apollo/client */ \"./node_modules/@apollo/client/index.js\");\n\nfunction _templateObject() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n  mutation MakeMove($gameId: ID!, $fromRow: Int!, $fromCol: Int!, $toRow: Int!, $toCol: Int!) {\\n    makeMove(gameId: $gameId, fromRow: $fromRow, fromCol: $fromCol, toRow: $toRow, toCol: $toCol) {\\n      fromRow\\n      fromCol\\n      toRow\\n      toCol\\n      pieceType\\n      pieceColor\\n      moveNumber\\n    }\\n  }\\n\"\n    ]);\n    _templateObject = function() {\n        return data;\n    };\n    return data;\n}\n\nvar _s = $RefreshSig$();\n\n\nconst MAKE_MOVE = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_3__.gql)(_templateObject());\nconst ChessBoard = (param)=>{\n    let { game, gameId, onMoveComplete } = param;\n    _s();\n    const [selectedSquare, setSelectedSquare] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [validMoves, setValidMoves] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)([]);\n    const [moveError, setMoveError] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [makeMove, { loading: moveLoading }] = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_3__.useMutation)(MAKE_MOVE);\n    const handleSquareClick = async (row, col)=>{\n        console.log(\"Square clicked:\", row, col);\n        // Clear any previous errors\n        setMoveError(null);\n        if (!selectedSquare) {\n            const piece = getPieceAt(row, col);\n            console.log(\"Piece at clicked square:\", piece);\n            if (piece && piece.color === (game === null || game === void 0 ? void 0 : game.currentPlayer)) {\n                console.log(\"Selecting piece:\", piece);\n                setSelectedSquare({\n                    row,\n                    col\n                });\n                await getValidMovesForPiece(row, col);\n            }\n        } else {\n            console.log(\"Making move from\", selectedSquare, \"to\", {\n                row,\n                col\n            });\n            try {\n                const result = await makeMove({\n                    variables: {\n                        gameId,\n                        fromRow: selectedSquare.row,\n                        fromCol: selectedSquare.col,\n                        toRow: row,\n                        toCol: col\n                    }\n                });\n                console.log(\"Move result:\", result);\n                setSelectedSquare(null);\n                setValidMoves([]);\n                onMoveComplete();\n            } catch (error) {\n                console.error(\"Move error:\", error);\n                setMoveError(\"Invalid move\");\n                setSelectedSquare(null);\n                setValidMoves([]);\n            }\n        }\n    };\n    const getValidMovesForPiece = async (row, col)=>{\n        const piece = getPieceAt(row, col);\n        if (!piece) return;\n        const moves = [];\n        // Test each square on the board to see if it's a valid move\n        for(let r = 0; r < 8; r++){\n            for(let c = 0; c < 8; c++){\n                if (r === row && c === col) continue;\n                // First check basic movement pattern\n                if (isValidMovePattern(piece, row, col, r, c)) {\n                    // Then check if this move would be legal (doesn't put own king in check)\n                    if (isLegalMove(row, col, r, c)) {\n                        moves.push({\n                            row: r,\n                            col: c\n                        });\n                    }\n                }\n            }\n        }\n        setValidMoves(moves);\n    };\n    // Check if a move is legal (doesn't put own king in check)\n    const isLegalMove = (fromRow, fromCol, toRow, toCol)=>{\n        // Simulate the move\n        const simulatedGame = simulateMove(fromRow, fromCol, toRow, toCol);\n        // Check if this move would put own king in check\n        const piece = getPieceAt(fromRow, fromCol);\n        return !isKingInCheck(simulatedGame, piece.color);\n    };\n    // Simulate a move and return the resulting game state\n    const simulateMove = (fromRow, fromCol, toRow, toCol)=>{\n        if (!(game === null || game === void 0 ? void 0 : game.pieces)) return null;\n        // Create a copy of the pieces array\n        const newPieces = game.pieces.map((piece)=>({\n                ...piece\n            }));\n        // Find the piece to move\n        const pieceIndex = newPieces.findIndex((p)=>p.row === fromRow && p.col === fromCol);\n        if (pieceIndex === -1) return null;\n        // Remove any piece at destination (capture)\n        const capturedIndex = newPieces.findIndex((p)=>p.row === toRow && p.col === toCol);\n        if (capturedIndex !== -1) {\n            newPieces.splice(capturedIndex, 1);\n        }\n        // Move the piece\n        newPieces[pieceIndex] = {\n            ...newPieces[pieceIndex],\n            row: toRow,\n            col: toCol\n        };\n        return {\n            pieces: newPieces\n        };\n    };\n    // Check if a king is in check in a given game state\n    const isKingInCheck = (gameState, kingColor)=>{\n        if (!(gameState === null || gameState === void 0 ? void 0 : gameState.pieces)) return false;\n        // Find the king\n        const king = gameState.pieces.find((p)=>p.type === \"KING\" && p.color === kingColor);\n        if (!king) return false;\n        // Check if any opponent piece can attack the king\n        const opponentColor = kingColor === \"WHITE\" ? \"BLACK\" : \"WHITE\";\n        const opponentPieces = gameState.pieces.filter((p)=>p.color === opponentColor);\n        for (let piece of opponentPieces){\n            if (canPieceAttackSquare(gameState, piece, king.row, king.col)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    // Check if a piece can attack a specific square\n    const canPieceAttackSquare = (gameState, piece, targetRow, targetCol)=>{\n        const rowDiff = Math.abs(targetRow - piece.row);\n        const colDiff = Math.abs(targetCol - piece.col);\n        switch(piece.type){\n            case \"PAWN\":\n                const direction = piece.color === \"WHITE\" ? -1 : 1;\n                const rowDiffSigned = targetRow - piece.row;\n                // Pawns attack diagonally\n                return colDiff === 1 && rowDiffSigned === direction;\n            case \"ROOK\":\n                // For rook attacks, check if path is clear\n                return (rowDiff === 0 || colDiff === 0) && isPathClearInGame(gameState, piece.row, piece.col, targetRow, targetCol);\n            case \"BISHOP\":\n                // For bishop attacks, check if path is clear\n                return rowDiff === colDiff && isPathClearInGame(gameState, piece.row, piece.col, targetRow, targetCol);\n            case \"QUEEN\":\n                // For queen attacks, check if path is clear\n                return (rowDiff === 0 || colDiff === 0 || rowDiff === colDiff) && isPathClearInGame(gameState, piece.row, piece.col, targetRow, targetCol);\n            case \"KING\":\n                return rowDiff <= 1 && colDiff <= 1;\n            case \"KNIGHT\":\n                return rowDiff === 2 && colDiff === 1 || rowDiff === 1 && colDiff === 2;\n            default:\n                return false;\n        }\n    };\n    // Check if path is clear in a given game state\n    const isPathClearInGame = (gameState, fromRow, fromCol, toRow, toCol)=>{\n        const rowStep = Math.sign(toRow - fromRow);\n        const colStep = Math.sign(toCol - fromCol);\n        let currentRow = fromRow + rowStep;\n        let currentCol = fromCol + colStep;\n        while(currentRow !== toRow || currentCol !== toCol){\n            if (gameState.pieces.find((p)=>p.row === currentRow && p.col === currentCol)) {\n                return false;\n            }\n            currentRow += rowStep;\n            currentCol += colStep;\n        }\n        return true;\n    };\n    const isValidMovePattern = (piece, fromRow, fromCol, toRow, toCol)=>{\n        const rowDiff = Math.abs(toRow - fromRow);\n        const colDiff = Math.abs(toCol - fromCol);\n        const targetPiece = getPieceAt(toRow, toCol);\n        // Can't move to squares with your own pieces\n        if (targetPiece && targetPiece.color === piece.color) {\n            return false;\n        }\n        // Basic movement patterns - ignore enemy pieces when highlighting\n        switch(piece.type){\n            case \"PAWN\":\n                const direction = piece.color === \"WHITE\" ? -1 : 1;\n                const rowDiffSigned = toRow - fromRow;\n                if (colDiff === 0) {\n                    // Forward moves\n                    if (rowDiffSigned === direction) return true;\n                    if (piece.hasMoved === false && rowDiffSigned === 2 * direction) {\n                        return true;\n                    }\n                } else if (colDiff === 1 && rowDiffSigned === direction) {\n                    // Diagonal moves\n                    return true;\n                }\n                return false;\n            case \"ROOK\":\n                return rowDiff === 0 || colDiff === 0;\n            case \"BISHOP\":\n                return rowDiff === colDiff;\n            case \"QUEEN\":\n                return rowDiff === 0 || colDiff === 0 || rowDiff === colDiff;\n            case \"KING\":\n                return rowDiff <= 1 && colDiff <= 1;\n            case \"KNIGHT\":\n                return rowDiff === 2 && colDiff === 1 || rowDiff === 1 && colDiff === 2;\n            default:\n                return false;\n        }\n    };\n    const isPathClearSimple = (fromRow, fromCol, toRow, toCol)=>{\n        const rowStep = Math.sign(toRow - fromRow);\n        const colStep = Math.sign(toCol - fromCol);\n        let currentRow = fromRow + rowStep;\n        let currentCol = fromCol + colStep;\n        while(currentRow !== toRow || currentCol !== toCol){\n            if (getPieceAt(currentRow, currentCol)) {\n                return false;\n            }\n            currentRow += rowStep;\n            currentCol += colStep;\n        }\n        return true;\n    };\n    const getPieceAt = (row, col)=>{\n        var _game_pieces;\n        return game === null || game === void 0 ? void 0 : (_game_pieces = game.pieces) === null || _game_pieces === void 0 ? void 0 : _game_pieces.find((piece)=>piece.row === row && piece.col === col);\n    };\n    const getPieceSymbol = (piece)=>{\n        var _pieceSymbols_piece_color;\n        if (!piece) return \"\";\n        const pieceSymbols = {\n            \"WHITE\": {\n                \"KING\": \"♔\",\n                \"QUEEN\": \"♕\",\n                \"ROOK\": \"♖\",\n                \"BISHOP\": \"♗\",\n                \"KNIGHT\": \"♘\",\n                \"PAWN\": \"♙\"\n            },\n            \"BLACK\": {\n                \"KING\": \"♚\",\n                \"QUEEN\": \"♛\",\n                \"ROOK\": \"♜\",\n                \"BISHOP\": \"♝\",\n                \"KNIGHT\": \"♞\",\n                \"PAWN\": \"♟\"\n            }\n        };\n        return ((_pieceSymbols_piece_color = pieceSymbols[piece.color]) === null || _pieceSymbols_piece_color === void 0 ? void 0 : _pieceSymbols_piece_color[piece.type]) || piece.type[0];\n    };\n    const isValidMoveSquare = (row, col)=>{\n        return validMoves.some((move)=>move.row === row && move.col === col);\n    };\n    if (!game) return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n        children: \"Loading...\"\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\Harry Miller\\\\chess-game\\\\frontend\\\\src\\\\components\\\\ChessBoard.js\",\n        lineNumber: 301,\n        columnNumber: 21\n    }, undefined);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n        children: [\n            moveError && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                style: {\n                    color: \"red\",\n                    marginBottom: \"10px\"\n                },\n                children: moveError\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Harry Miller\\\\chess-game\\\\frontend\\\\src\\\\components\\\\ChessBoard.js\",\n                lineNumber: 306,\n                columnNumber: 9\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                className: \"chess-board\",\n                children: Array.from({\n                    length: 8\n                }, (_, row)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                        className: \"chess-row\",\n                        children: Array.from({\n                            length: 8\n                        }, (_, col)=>{\n                            const piece = getPieceAt(row, col);\n                            const isSelected = selectedSquare && selectedSquare.row === row && selectedSquare.col === col;\n                            const isValidMove = isValidMoveSquare(row, col);\n                            const isLight = (row + col) % 2 === 0;\n                            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                                className: \"chess-square \".concat(isLight ? \"light\" : \"dark\", \" \").concat(isSelected ? \"selected\" : \"\"),\n                                onClick: ()=>handleSquareClick(row, col),\n                                children: [\n                                    isValidMove && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                                        className: \"valid-move-overlay\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\Harry Miller\\\\chess-game\\\\frontend\\\\src\\\\components\\\\ChessBoard.js\",\n                                        lineNumber: 326,\n                                        columnNumber: 35\n                                    }, undefined),\n                                    piece && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"span\", {\n                                        className: \"piece\",\n                                        children: getPieceSymbol(piece)\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\Harry Miller\\\\chess-game\\\\frontend\\\\src\\\\components\\\\ChessBoard.js\",\n                                        lineNumber: 328,\n                                        columnNumber: 21\n                                    }, undefined)\n                                ]\n                            }, col, true, {\n                                fileName: \"C:\\\\Users\\\\Harry Miller\\\\chess-game\\\\frontend\\\\src\\\\components\\\\ChessBoard.js\",\n                                lineNumber: 321,\n                                columnNumber: 17\n                            }, undefined);\n                        })\n                    }, row, false, {\n                        fileName: \"C:\\\\Users\\\\Harry Miller\\\\chess-game\\\\frontend\\\\src\\\\components\\\\ChessBoard.js\",\n                        lineNumber: 313,\n                        columnNumber: 11\n                    }, undefined))\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Harry Miller\\\\chess-game\\\\frontend\\\\src\\\\components\\\\ChessBoard.js\",\n                lineNumber: 311,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\Harry Miller\\\\chess-game\\\\frontend\\\\src\\\\components\\\\ChessBoard.js\",\n        lineNumber: 304,\n        columnNumber: 5\n    }, undefined);\n};\n_s(ChessBoard, \"KDAaof9zxJLq3TdkMNevsbnpBwk=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_3__.useMutation\n    ];\n});\n_c = ChessBoard;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ChessBoard);\nvar _c;\n$RefreshReg$(_c, \"ChessBoard\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ChessBoard.js\n"));

/***/ })

});